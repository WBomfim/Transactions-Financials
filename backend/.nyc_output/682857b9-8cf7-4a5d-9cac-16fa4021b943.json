{"/app_backend/src/api/app.ts":{"path":"/app_backend/src/api/app.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":32}},"2":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"3":{"start":{"line":5,"column":13},"end":{"line":5,"column":28}},"4":{"start":{"line":6,"column":23},"end":{"line":6,"column":61}},"5":{"start":{"line":7,"column":16},"end":{"line":7,"column":42}},"6":{"start":{"line":8,"column":15},"end":{"line":8,"column":40}},"7":{"start":{"line":9,"column":18},"end":{"line":9,"column":46}},"8":{"start":{"line":10,"column":22},"end":{"line":10,"column":54}},"9":{"start":{"line":11,"column":12},"end":{"line":11,"column":21}},"10":{"start":{"line":12,"column":0},"end":{"line":12,"column":24}},"11":{"start":{"line":13,"column":0},"end":{"line":13,"column":16}},"12":{"start":{"line":14,"column":0},"end":{"line":14,"column":35}},"13":{"start":{"line":15,"column":0},"end":{"line":15,"column":34}},"14":{"start":{"line":16,"column":0},"end":{"line":16,"column":40}},"15":{"start":{"line":17,"column":0},"end":{"line":17,"column":48}},"16":{"start":{"line":18,"column":0},"end":{"line":18,"column":32}},"17":{"start":{"line":19,"column":0},"end":{"line":19,"column":22}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"/app_backend/src/api/app.ts","sources":["/app_backend/src/api/app.ts"],"names":[],"mappings":";;AAAA,gCAA8B;AAC9B,mCAAmC;AACnC,6BAA6B;AAC7B,8DAAuD;AACvD,2CAA0C;AAC1C,yCAAwC;AACxC,+CAA8C;AAC9C,uDAAsD;AAEtD,MAAM,GAAG,GAAG,OAAO,EAAE,CAAC;AAEtB,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC;AACxB,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC;AAEhB,GAAG,CAAC,GAAG,CAAC,QAAQ,EAAE,eAAW,CAAC,CAAC;AAE/B,GAAG,CAAC,GAAG,CAAC,QAAQ,EAAE,cAAU,CAAC,CAAC;AAE9B,GAAG,CAAC,GAAG,CAAC,WAAW,EAAE,iBAAa,CAAC,CAAC;AAEpC,GAAG,CAAC,GAAG,CAAC,eAAe,EAAE,qBAAiB,CAAC,CAAC;AAE5C,GAAG,CAAC,GAAG,CAAC,sBAAY,CAAC,CAAC;AAEtB,kBAAe,GAAG,CAAC","sourcesContent":["import 'express-async-errors';\nimport * as express from 'express';\nimport * as cors from 'cors';\nimport handleErrors from '../middlewares/handleErrors';\nimport loginRouter from '../routes/login';\nimport userRoutes from '../routes/user';\nimport accountRoutes from '../routes/account';\nimport transactionRoutes from '../routes/transaction';\n\nconst app = express();\n\napp.use(express.json());\napp.use(cors());\n\napp.use('/login', loginRouter);\n\napp.use('/users', userRoutes);\n\napp.use('/accounts', accountRoutes);\n\napp.use('/transactions', transactionRoutes);\n\napp.use(handleErrors);\n\nexport default app;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"7c4a903dced2c357308ba1fd2fb2014879279b15"},"/app_backend/src/middlewares/handleErrors.ts":{"path":"/app_backend/src/middlewares/handleErrors.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":14},"end":{"line":3,"column":28}},"2":{"start":{"line":4,"column":24},"end":{"line":4,"column":57}},"3":{"start":{"line":5,"column":21},"end":{"line":5,"column":51}},"4":{"start":{"line":6,"column":21},"end":{"line":18,"column":1}},"5":{"start":{"line":7,"column":4},"end":{"line":10,"column":5}},"6":{"start":{"line":8,"column":36},"end":{"line":8,"column":39}},"7":{"start":{"line":9,"column":8},"end":{"line":9,"column":93}},"8":{"start":{"line":11,"column":32},"end":{"line":11,"column":43}},"9":{"start":{"line":12,"column":24},"end":{"line":12,"column":73}},"10":{"start":{"line":13,"column":4},"end":{"line":16,"column":5}},"11":{"start":{"line":14,"column":40},"end":{"line":14,"column":51}},"12":{"start":{"line":15,"column":8},"end":{"line":15,"column":56}},"13":{"start":{"line":17,"column":4},"end":{"line":17,"column":102}},"14":{"start":{"line":19,"column":0},"end":{"line":19,"column":31}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":6,"column":21},"end":{"line":6,"column":22}},"loc":{"start":{"line":6,"column":48},"end":{"line":18,"column":1}},"line":6}},"branchMap":{"0":{"loc":{"start":{"line":7,"column":4},"end":{"line":10,"column":5}},"type":"if","locations":[{"start":{"line":7,"column":4},"end":{"line":10,"column":5}},{"start":{"line":7,"column":4},"end":{"line":10,"column":5}}],"line":7},"1":{"loc":{"start":{"line":13,"column":4},"end":{"line":16,"column":5}},"type":"if","locations":[{"start":{"line":13,"column":4},"end":{"line":16,"column":5}},{"start":{"line":13,"column":4},"end":{"line":16,"column":5}}],"line":13}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":2,"6":0,"7":0,"8":2,"9":2,"10":2,"11":2,"12":2,"13":0,"14":1},"f":{"0":2},"b":{"0":[0,2],"1":[2,0]},"inputSourceMap":{"version":3,"file":"/app_backend/src/middlewares/handleErrors.ts","sources":["/app_backend/src/middlewares/handleErrors.ts"],"names":[],"mappings":";;AACA,6BAA+B;AAC/B,0DAAmE;AACnE,oDAA6C;AAE7C,MAAM,YAAY,GAAwB,CACxC,GAAqB,EACrB,IAAI,EACJ,GAAG,EACH,KAAK,EACL,EAAE;IACF,IAAI,GAAG,YAAY,cAAQ,EAAE;QAC3B,MAAM,EAAE,MAAM,EAAE,CAAC,KAAK,CAAC,EAAE,GAAG,GAAG,CAAC;QAChC,OAAO,GAAG,CAAC,MAAM,CAAC,oBAAU,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;KAC5E;IAED,MAAM,mBAAmB,GAAG,GAAG,CAAC,OAAmC,CAAC;IAEpE,MAAM,WAAW,GAAG,4BAAY,CAAC,mBAAmB,CAAC,CAAC;IAEtD,IAAI,WAAW,EAAE;QACf,MAAM,EAAE,UAAU,EAAE,OAAO,EAAE,GAAG,WAAW,CAAC;QAC5C,OAAO,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,CAAC,CAAC;KACjD;IAED,OAAO,GAAG,CAAC,MAAM,CAAC,oBAAU,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,uBAAuB,EAAE,CAAC,CAAC;AAC1F,CAAC,CAAC;AAEF,kBAAe,YAAY,CAAC","sourcesContent":["import { ErrorRequestHandler } from 'express';\nimport { ZodError } from 'zod';\nimport { ErrorsTypes, errorCatalog } from '../types/ErrorsCatalog';\nimport StatusHttp from '../types/StatusHttp';\n\nconst errorHandler: ErrorRequestHandler = ( \n  err: Error | ZodError, \n  _req,\n  res,\n  _next,\n) => {\n  if (err instanceof ZodError) { \n    const { issues: [error] } = err;\n    return res.status(StatusHttp.BAD_REQUEST).json({ message: error.message });\n  }\n\n  const messageByErrorsType = err.message as keyof typeof ErrorsTypes;\n\n  const mappedError = errorCatalog[messageByErrorsType];\n\n  if (mappedError) {\n    const { statusHttp, message } = mappedError;\n    return res.status(statusHttp).json({ message });\n  }\n\n  return res.status(StatusHttp.INTERNAL_ERROR).json({ message: 'Internal server error' });\n};\n\nexport default errorHandler;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"dd2e98cc1776cf5169685874f4862aef6ee9aa64"},"/app_backend/src/types/ErrorsCatalog.ts":{"path":"/app_backend/src/types/ErrorsCatalog.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":52}},"2":{"start":{"line":4,"column":21},"end":{"line":4,"column":44}},"3":{"start":{"line":6,"column":0},"end":{"line":17,"column":68}},"4":{"start":{"line":7,"column":4},"end":{"line":7,"column":57}},"5":{"start":{"line":8,"column":4},"end":{"line":8,"column":51}},"6":{"start":{"line":9,"column":4},"end":{"line":9,"column":55}},"7":{"start":{"line":10,"column":4},"end":{"line":10,"column":63}},"8":{"start":{"line":11,"column":4},"end":{"line":11,"column":57}},"9":{"start":{"line":12,"column":4},"end":{"line":12,"column":55}},"10":{"start":{"line":13,"column":4},"end":{"line":13,"column":69}},"11":{"start":{"line":14,"column":4},"end":{"line":14,"column":65}},"12":{"start":{"line":15,"column":4},"end":{"line":15,"column":51}},"13":{"start":{"line":16,"column":4},"end":{"line":16,"column":53}},"14":{"start":{"line":18,"column":0},"end":{"line":59,"column":2}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":6,"column":1},"end":{"line":6,"column":2}},"loc":{"start":{"line":6,"column":24},"end":{"line":17,"column":1}},"line":6}},"branchMap":{"0":{"loc":{"start":{"line":17,"column":17},"end":{"line":17,"column":66}},"type":"binary-expr","locations":[{"start":{"line":17,"column":17},"end":{"line":17,"column":36}},{"start":{"line":17,"column":41},"end":{"line":17,"column":65}}],"line":17}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1},"f":{"0":1},"b":{"0":[1,1]},"inputSourceMap":{"version":3,"file":"/app_backend/src/types/ErrorsCatalog.ts","sources":["/app_backend/src/types/ErrorsCatalog.ts"],"names":[],"mappings":";;;AAAA,6CAAsC;AAOtC,IAAY,WAWX;AAXD,WAAY,WAAW;IACrB,oDAAqC,CAAA;IACrC,8CAA+B,CAAA;IAC/B,kDAAmC,CAAA;IACnC,0DAA2C,CAAA;IAC3C,oDAAqC,CAAA;IACrC,kDAAmC,CAAA;IACnC,gEAAiD,CAAA;IACjD,4DAA6C,CAAA;IAC7C,8CAA+B,CAAA;IAC/B,gDAAiC,CAAA;AACnC,CAAC,EAXW,WAAW,GAAX,mBAAW,KAAX,mBAAW,QAWtB;AAMY,QAAA,YAAY,GAAkB;IACzC,gBAAgB,EAAE;QAChB,UAAU,EAAE,oBAAU,CAAC,YAAY;QACnC,OAAO,EAAE,kBAAkB;KAC5B;IACD,aAAa,EAAE;QACb,UAAU,EAAE,oBAAU,CAAC,YAAY;QACnC,OAAO,EAAE,eAAe;KACzB;IACD,eAAe,EAAE;QACf,UAAU,EAAE,oBAAU,CAAC,YAAY;QACnC,OAAO,EAAE,iBAAiB;KAC3B;IACD,mBAAmB,EAAE;QACnB,UAAU,EAAE,oBAAU,CAAC,QAAQ;QAC/B,OAAO,EAAE,qBAAqB;KAC/B;IACD,gBAAgB,EAAE;QAChB,UAAU,EAAE,oBAAU,CAAC,WAAW;QAClC,OAAO,EAAE,kBAAkB;KAC5B;IACD,eAAe,EAAE;QACf,UAAU,EAAE,oBAAU,CAAC,WAAW;QAClC,OAAO,EAAE,iBAAiB;KAC3B;IACD,sBAAsB,EAAE;QACtB,UAAU,EAAE,oBAAU,CAAC,QAAQ;QAC/B,OAAO,EAAE,wBAAwB;KAClC;IACD,oBAAoB,EAAE;QACpB,UAAU,EAAE,oBAAU,CAAC,QAAQ;QAC/B,OAAO,EAAE,8BAA8B;KACxC;IACD,aAAa,EAAE;QACb,UAAU,EAAE,oBAAU,CAAC,QAAQ;QAC/B,OAAO,EAAE,gDAAgD;KAC1D;IACD,cAAc,EAAE;QACd,UAAU,EAAE,oBAAU,CAAC,SAAS;QAChC,OAAO,EAAE,gBAAgB;KAC1B;CACF,CAAC","sourcesContent":["import StatusHttp from './StatusHttp';\n\ntype ErrorObject = { \n  statusHttp: number\n  message: string;\n};\n\nexport enum ErrorsTypes {\n  INVALID_PASSWORD = 'INVALID_PASSWORD',\n  INVALID_TOKEN = 'INVALID_TOKEN',\n  NOT_FOUND_TOKEN = 'NOT_FOUND_TOKEN',\n  USER_ALREADY_EXISTS = 'USER_ALREADY_EXISTS',\n  INVALID_USERNAME = 'INVALID_USERNAME',\n  INVALID_ACCOUNT = 'INVALID_ACCOUNT',\n  INVALID_CREDIT_ACCOUNT = 'INVALID_CREDIT_ACCOUNT',\n  INSUFFICIENT_BALANCE = 'INSUFFICIENT_BALANCE',\n  INVALID_VALUE = 'INVALID_VALUE',\n  USER_NOT_FOUND = 'USER_NOT_FOUND',\n}\n\nexport type ErrorsCatalog = {\n  [key in ErrorsTypes]: ErrorObject\n};\n\nexport const errorCatalog: ErrorsCatalog = {\n  INVALID_PASSWORD: {\n    statusHttp: StatusHttp.UNAUTHORIZED,\n    message: 'Invalid password',\n  },\n  INVALID_TOKEN: {\n    statusHttp: StatusHttp.UNAUTHORIZED,\n    message: 'Invalid token',\n  },\n  NOT_FOUND_TOKEN: {\n    statusHttp: StatusHttp.UNAUTHORIZED,\n    message: 'Not found token',\n  },\n  USER_ALREADY_EXISTS: {\n    statusHttp: StatusHttp.CONFLICT,\n    message: 'User already exists',\n  },\n  INVALID_USERNAME: {\n    statusHttp: StatusHttp.BAD_REQUEST,\n    message: 'Invalid username',\n  },\n  INVALID_ACCOUNT: {\n    statusHttp: StatusHttp.BAD_REQUEST,\n    message: 'Invalid account',\n  },\n  INVALID_CREDIT_ACCOUNT: {\n    statusHttp: StatusHttp.CONFLICT,\n    message: 'Invalid credit account',\n  },\n  INSUFFICIENT_BALANCE: {\n    statusHttp: StatusHttp.CONFLICT,\n    message: 'Insufficient account balance',\n  },\n  INVALID_VALUE: {\n    statusHttp: StatusHttp.CONFLICT,\n    message: 'The value cannot be less than or equal to zero',\n  },\n  USER_NOT_FOUND: {\n    statusHttp: StatusHttp.NOT_FOUND,\n    message: 'User not found',\n  },\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"bbd41e6721db2482c838830952bd0a463bd22d14"},"/app_backend/src/types/StatusHttp.ts":{"path":"/app_backend/src/types/StatusHttp.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":4,"column":0},"end":{"line":13,"column":36}},"2":{"start":{"line":5,"column":4},"end":{"line":5,"column":46}},"3":{"start":{"line":6,"column":4},"end":{"line":6,"column":56}},"4":{"start":{"line":7,"column":4},"end":{"line":7,"column":62}},"5":{"start":{"line":8,"column":4},"end":{"line":8,"column":64}},"6":{"start":{"line":9,"column":4},"end":{"line":9,"column":66}},"7":{"start":{"line":10,"column":4},"end":{"line":10,"column":60}},"8":{"start":{"line":11,"column":4},"end":{"line":11,"column":58}},"9":{"start":{"line":12,"column":4},"end":{"line":12,"column":70}},"10":{"start":{"line":14,"column":0},"end":{"line":14,"column":29}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":1},"end":{"line":4,"column":2}},"loc":{"start":{"line":4,"column":23},"end":{"line":13,"column":1}},"line":4}},"branchMap":{"0":{"loc":{"start":{"line":13,"column":3},"end":{"line":13,"column":34}},"type":"binary-expr","locations":[{"start":{"line":13,"column":3},"end":{"line":13,"column":13}},{"start":{"line":13,"column":18},"end":{"line":13,"column":33}}],"line":13}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1},"f":{"0":1},"b":{"0":[1,1]},"inputSourceMap":{"version":3,"file":"/app_backend/src/types/StatusHttp.ts","sources":["/app_backend/src/types/StatusHttp.ts"],"names":[],"mappings":";;AAAA,IAAK,UASJ;AATD,WAAK,UAAU;IACb,yCAAQ,CAAA;IACR,mDAAa,CAAA;IACb,yDAAgB,CAAA;IAChB,2DAAiB,CAAA;IACjB,6DAAkB,CAAA;IAClB,uDAAe,CAAA;IACf,qDAAc,CAAA;IACd,iEAAoB,CAAA;AACtB,CAAC,EATI,UAAU,KAAV,UAAU,QASd;AAED,kBAAe,UAAU,CAAC","sourcesContent":["enum StatusHttp {\n  OK = 200,\n  CREATED = 201,\n  NO_CONTENT = 204,\n  BAD_REQUEST = 400,\n  UNAUTHORIZED = 401,\n  NOT_FOUND = 404,\n  CONFLICT = 409,\n  INTERNAL_ERROR = 500,\n}\n\nexport default StatusHttp;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"6247021068143b2b22222249e61afc5643c0faad"},"/app_backend/src/routes/login.ts":{"path":"/app_backend/src/routes/login.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":18},"end":{"line":3,"column":36}},"2":{"start":{"line":4,"column":16},"end":{"line":4,"column":47}},"3":{"start":{"line":5,"column":15},"end":{"line":5,"column":38}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":40}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":25}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"/app_backend/src/routes/login.ts","sources":["/app_backend/src/routes/login.ts"],"names":[],"mappings":";;AAAA,qCAAiC;AACjC,gDAAmD;AAEnD,MAAM,MAAM,GAAG,IAAA,gBAAM,GAAE,CAAC;AAExB,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,eAAe,CAAC,KAAK,CAAC,CAAC;AAExC,kBAAe,MAAM,CAAC","sourcesContent":["import { Router } from 'express';\nimport loginController from '../controllers/login';\n\nconst router = Router();\n\nrouter.post('/', loginController.login);\n\nexport default router;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"6cad665a172b46eb1ccc840067889d3d13f92d84"},"/app_backend/src/controllers/login.ts":{"path":"/app_backend/src/controllers/login.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":16},"end":{"line":3,"column":44}},"2":{"start":{"line":4,"column":21},"end":{"line":4,"column":51}},"3":{"start":{"line":5,"column":14},"end":{"line":9,"column":1}},"4":{"start":{"line":6,"column":21},"end":{"line":6,"column":29}},"5":{"start":{"line":7,"column":22},"end":{"line":7,"column":59}},"6":{"start":{"line":8,"column":4},"end":{"line":8,"column":63}},"7":{"start":{"line":10,"column":0},"end":{"line":10,"column":28}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":14},"end":{"line":5,"column":15}},"loc":{"start":{"line":5,"column":34},"end":{"line":9,"column":1}},"line":5}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":3,"5":3,"6":1,"7":1},"f":{"0":3},"b":{},"inputSourceMap":{"version":3,"file":"/app_backend/src/controllers/login.ts","sources":["/app_backend/src/controllers/login.ts"],"names":[],"mappings":";;AACA,6CAA6C;AAC7C,oDAA6C;AAI7C,MAAM,KAAK,GAAG,KAAK,EAAE,GAAY,EAAE,GAA0B,EAAE,EAAE;IAC/D,MAAM,QAAQ,GAAS,GAAG,CAAC,IAAI,CAAC;IAChC,MAAM,SAAS,GAAG,MAAM,eAAY,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;IACrD,OAAO,GAAG,CAAC,MAAM,CAAC,oBAAU,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AACnD,CAAC,CAAA;AAED,kBAAe,EAAE,KAAK,EAAE,CAAC","sourcesContent":["import { Request, Response } from 'express';\nimport loginService from '../services/login';\nimport StatusHttp from '../types/StatusHttp';\nimport { User } from '../types/User';\nimport { TokenReturn } from '../types/TokenReturn';\n\nconst login = async (req: Request, res: Response<TokenReturn>) => {\n  const loginObj: User = req.body;\n  const tokenData = await loginService.login(loginObj);\n  return res.status(StatusHttp.OK).json(tokenData);\n}\n\nexport default { login };\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"8d812ce13d73f33cf0a6558fa9656eeecf85ab8b"},"/app_backend/src/services/login.ts":{"path":"/app_backend/src/services/login.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":15},"end":{"line":3,"column":49}},"2":{"start":{"line":4,"column":24},"end":{"line":4,"column":57}},"3":{"start":{"line":5,"column":25},"end":{"line":5,"column":61}},"4":{"start":{"line":6,"column":22},"end":{"line":6,"column":55}},"5":{"start":{"line":7,"column":14},"end":{"line":18,"column":1}},"6":{"start":{"line":8,"column":35},"end":{"line":8,"column":43}},"7":{"start":{"line":9,"column":17},"end":{"line":9,"column":70}},"8":{"start":{"line":10,"column":4},"end":{"line":11,"column":70}},"9":{"start":{"line":11,"column":8},"end":{"line":11,"column":70}},"10":{"start":{"line":12,"column":4},"end":{"line":12,"column":66}},"11":{"start":{"line":13,"column":4},"end":{"line":17,"column":6}},"12":{"start":{"line":19,"column":0},"end":{"line":19,"column":28}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":14},"end":{"line":7,"column":15}},"loc":{"start":{"line":7,"column":34},"end":{"line":18,"column":1}},"line":7}},"branchMap":{"0":{"loc":{"start":{"line":10,"column":4},"end":{"line":11,"column":70}},"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":11,"column":70}},{"start":{"line":10,"column":4},"end":{"line":11,"column":70}}],"line":10}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":3,"7":3,"8":3,"9":1,"10":2,"11":1,"12":1},"f":{"0":3},"b":{"0":[1,2]},"inputSourceMap":{"version":3,"file":"/app_backend/src/services/login.ts","sources":["/app_backend/src/services/login.ts"],"names":[],"mappings":";;AAAA,kDAAgD;AAGhD,0DAAqD;AACrD,8DAA2D;AAC3D,wDAAuD;AAEvD,MAAM,KAAK,GAAG,KAAK,EAAE,QAAc,EAAwB,EAAE;IAC3D,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,GAAG,QAAQ,CAAC;IAExC,MAAM,IAAI,GAAG,MAAM,cAAS,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,EAAE,QAAQ,EAAE,EAAE,CAAC,CAAC;IAC9D,IAAI,CAAC,IAAI;QAAE,MAAM,IAAI,KAAK,CAAC,2BAAW,CAAC,gBAAgB,CAAC,CAAC;IAEzD,IAAA,+BAAc,EAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;IAExC,OAAO;QACL,QAAQ,EAAE,IAAI,CAAC,QAAQ;QACvB,OAAO,EAAE,IAAI,CAAC,SAAS;QACvB,KAAK,EAAE,IAAA,2BAAa,EAAC,IAAI,CAAC;KAC3B,CAAC;AACJ,CAAC,CAAC;AAEF,kBAAe,EAAE,KAAK,EAAE,CAAC","sourcesContent":["import UserModel from '../database/models/User';\nimport { User } from '../types/User';\nimport { TokenReturn } from '../types/TokenReturn';\nimport { ErrorsTypes } from '../types/ErrorsCatalog';\nimport { verifyPassword } from '../helpers/passwordCrypto';\nimport { generateToken } from '../helpers/handleToken';\n\nconst login = async (loginObj: User): Promise<TokenReturn> => {\n  const { username, password } = loginObj;\n\n  const user = await UserModel.findOne({ where: { username } });\n  if (!user) throw new Error(ErrorsTypes.INVALID_USERNAME);\n  \n  verifyPassword(password, user.password);\n\n  return {\n    username: user.username,\n    account: user.accountId,\n    token: generateToken(user),\n  };\n};\n\nexport default { login };\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ef25083f1eaa52744cdf4f2819506d16e2a5b789"},"/app_backend/src/database/models/User.ts":{"path":"/app_backend/src/database/models/User.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":20},"end":{"line":3,"column":40}},"2":{"start":{"line":4,"column":11},"end":{"line":4,"column":23}},"3":{"start":{"line":5,"column":18},"end":{"line":5,"column":38}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":28}},"5":{"start":{"line":10,"column":0},"end":{"line":34,"column":3}},"6":{"start":{"line":35,"column":0},"end":{"line":35,"column":83}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"/app_backend/src/database/models/User.ts","sources":["/app_backend/src/database/models/User.ts"],"names":[],"mappings":";;AAAA,yCAAmD;AACnD,wBAAmB;AACnB,uCAAqC;AAErC,MAAqB,SAAU,SAAQ,iBAAK;CAK3C;AALD,4BAKC;AAAA,CAAC;AAEF,SAAS,CAAC,IAAI,CAAC;IACb,EAAE,EAAE;QACF,IAAI,EAAE,mBAAO;QACb,UAAU,EAAE,IAAI;QAChB,aAAa,EAAE,IAAI;QACnB,SAAS,EAAE,KAAK;KACjB;IACD,QAAQ,EAAE;QACR,IAAI,EAAE,kBAAM;QACZ,SAAS,EAAE,KAAK;KACjB;IACD,QAAQ,EAAE;QACR,IAAI,EAAE,kBAAM;QACZ,SAAS,EAAE,KAAK;KACjB;IACD,SAAS,EAAE;QACT,IAAI,EAAE,mBAAO;QACb,SAAS,EAAE,KAAK;KACjB;CACF,EAAE;IACD,SAAS,EAAE,UAAE;IACb,SAAS,EAAE,MAAM;IACjB,SAAS,EAAE,OAAO;IAClB,UAAU,EAAE,KAAK;CAClB,CAAC,CAAC;AAEH,SAAS,CAAC,SAAS,CAAC,iBAAY,EAAE,EAAE,UAAU,EAAE,WAAW,EAAE,EAAE,EAAE,SAAS,EAAE,CAAC,CAAC","sourcesContent":["import { Model, INTEGER, STRING } from 'sequelize';\nimport db from '.';\nimport AccountModel from './Account';\n\nexport default class UserModel extends Model {\n  id!: number;\n  username: string;\n  password!: string;\n  accountId: number;\n};\n\nUserModel.init({\n  id: {\n    type: INTEGER,\n    primaryKey: true,\n    autoIncrement: true,\n    allowNull: false,\n  },\n  username: {\n    type: STRING,\n    allowNull: false,\n  },\n  password: {\n    type: STRING,\n    allowNull: false,\n  },\n  accountId: {\n    type: INTEGER,\n    allowNull: false,\n  },\n}, {\n  sequelize: db,\n  modelName: 'User',\n  tableName: 'Users',\n  timestamps: false,\n});\n\nUserModel.belongsTo(AccountModel, { foreignKey: 'accountId', as: 'account' });\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"061f45ebcabc998faecd91f20706282c9682dd9d"},"/app_backend/src/database/models/index.ts":{"path":"/app_backend/src/database/models/index.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":20},"end":{"line":3,"column":40}},"2":{"start":{"line":4,"column":15},"end":{"line":4,"column":44}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":52}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"/app_backend/src/database/models/index.ts","sources":["/app_backend/src/database/models/index.ts"],"names":[],"mappings":";;AAAA,yCAAsC;AACtC,6CAA6C;AAE7C,kBAAe,IAAI,qBAAS,CAAC,MAAM,CAAC,CAAC","sourcesContent":["import { Sequelize } from 'sequelize';\nimport * as config from '../config/database';\n\nexport default new Sequelize(config);\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ac4089bce8afa4c28b607016bf43599592928020"},"/app_backend/src/database/models/Account.ts":{"path":"/app_backend/src/database/models/Account.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":20},"end":{"line":3,"column":40}},"2":{"start":{"line":4,"column":11},"end":{"line":4,"column":23}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":31}},"4":{"start":{"line":9,"column":0},"end":{"line":25,"column":3}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"/app_backend/src/database/models/Account.ts","sources":["/app_backend/src/database/models/Account.ts"],"names":[],"mappings":";;AAAA,yCAAoD;AACpD,wBAAmB;AAEnB,MAAqB,YAAa,SAAQ,iBAAK;CAG9C;AAHD,+BAGC;AAAA,CAAC;AAEF,YAAY,CAAC,IAAI,CAAC;IAChB,EAAE,EAAE;QACF,IAAI,EAAE,mBAAO;QACb,UAAU,EAAE,IAAI;QAChB,aAAa,EAAE,IAAI;QACnB,SAAS,EAAE,KAAK;KACjB;IACD,OAAO,EAAE;QACP,IAAI,EAAE,IAAA,mBAAO,EAAC,EAAE,EAAE,CAAC,CAAC;QACpB,SAAS,EAAE,KAAK;KACjB;CACF,EAAE;IACD,SAAS,EAAE,UAAE;IACb,SAAS,EAAE,SAAS;IACpB,SAAS,EAAE,UAAU;IACrB,UAAU,EAAE,KAAK;CAClB,CAAC,CAAC","sourcesContent":["import { Model, INTEGER, DECIMAL } from 'sequelize';\nimport db from '.';\n\nexport default class AccountModel extends Model {\n  public id!: number;\n  public balance: number;\n};\n\nAccountModel.init({\n  id: {\n    type: INTEGER,\n    primaryKey: true,\n    autoIncrement: true,\n    allowNull: false,\n  },\n  balance: {\n    type: DECIMAL(10, 2),\n    allowNull: false,\n  },\n}, {\n  sequelize: db,\n  modelName: 'Account',\n  tableName: 'Accounts',\n  timestamps: false,\n});\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"5240c5d15afa35344697acfeb184622014126035"},"/app_backend/src/helpers/passwordCrypto.ts":{"path":"/app_backend/src/helpers/passwordCrypto.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":55}},"2":{"start":{"line":4,"column":19},"end":{"line":4,"column":38}},"3":{"start":{"line":5,"column":24},"end":{"line":5,"column":57}},"4":{"start":{"line":6,"column":21},"end":{"line":9,"column":1}},"5":{"start":{"line":7,"column":17},"end":{"line":7,"column":48}},"6":{"start":{"line":8,"column":4},"end":{"line":8,"column":52}},"7":{"start":{"line":10,"column":0},"end":{"line":10,"column":36}},"8":{"start":{"line":11,"column":23},"end":{"line":15,"column":1}},"9":{"start":{"line":12,"column":20},"end":{"line":12,"column":63}},"10":{"start":{"line":13,"column":4},"end":{"line":14,"column":70}},"11":{"start":{"line":14,"column":8},"end":{"line":14,"column":70}},"12":{"start":{"line":16,"column":0},"end":{"line":16,"column":40}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":6,"column":21},"end":{"line":6,"column":22}},"loc":{"start":{"line":6,"column":35},"end":{"line":9,"column":1}},"line":6},"1":{"name":"(anonymous_1)","decl":{"start":{"line":11,"column":23},"end":{"line":11,"column":24}},"loc":{"start":{"line":11,"column":43},"end":{"line":15,"column":1}},"line":11}},"branchMap":{"0":{"loc":{"start":{"line":13,"column":4},"end":{"line":14,"column":70}},"type":"if","locations":[{"start":{"line":13,"column":4},"end":{"line":14,"column":70}},{"start":{"line":13,"column":4},"end":{"line":14,"column":70}}],"line":13}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":1,"8":1,"9":2,"10":2,"11":1,"12":1},"f":{"0":0,"1":2},"b":{"0":[1,1]},"inputSourceMap":{"version":3,"file":"/app_backend/src/helpers/passwordCrypto.ts","sources":["/app_backend/src/helpers/passwordCrypto.ts"],"names":[],"mappings":";;;AAAA,uCAA8D;AAC9D,0DAAqD;AAE9C,MAAM,YAAY,GAAG,CAAC,QAAgB,EAAU,EAAE;IACvD,MAAM,IAAI,GAAG,IAAA,sBAAW,EAAC,EAAE,CAAC,CAAC;IAC7B,OAAO,IAAA,mBAAQ,EAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;AAClC,CAAC,CAAA;AAHY,QAAA,YAAY,gBAGxB;AAEM,MAAM,cAAc,GAAG,CAAC,QAAgB,EAAE,IAAY,EAAQ,EAAE;IACrE,MAAM,OAAO,GAAG,IAAA,sBAAW,EAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;IAC5C,IAAI,CAAC,OAAO;QAAE,MAAM,IAAI,KAAK,CAAC,2BAAW,CAAC,gBAAgB,CAAC,CAAC;AAC9D,CAAC,CAAA;AAHY,QAAA,cAAc,kBAG1B","sourcesContent":["import { compareSync, genSaltSync, hashSync } from 'bcryptjs';\nimport { ErrorsTypes } from '../types/ErrorsCatalog';\n\nexport const hashPassword = (password: string): string => {\n  const salt = genSaltSync(10);\n  return hashSync(password, salt);\n}\n\nexport const verifyPassword = (password: string, hash: string): void => {\n  const isValid = compareSync(password, hash);\n  if (!isValid) throw new Error(ErrorsTypes.INVALID_PASSWORD);\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"39e84363f11099d719cd0bc2b2ff7616e5b43563"},"/app_backend/src/helpers/handleToken.ts":{"path":"/app_backend/src/helpers/handleToken.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":53}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":25}},"3":{"start":{"line":5,"column":23},"end":{"line":5,"column":46}},"4":{"start":{"line":6,"column":24},"end":{"line":6,"column":57}},"5":{"start":{"line":7,"column":19},"end":{"line":7,"column":41}},"6":{"start":{"line":8,"column":22},"end":{"line":11,"column":1}},"7":{"start":{"line":9,"column":40},"end":{"line":9,"column":44}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":98}},"9":{"start":{"line":12,"column":0},"end":{"line":12,"column":38}},"10":{"start":{"line":13,"column":20},"end":{"line":21,"column":1}},"11":{"start":{"line":14,"column":4},"end":{"line":20,"column":5}},"12":{"start":{"line":15,"column":24},"end":{"line":15,"column":69}},"13":{"start":{"line":16,"column":8},"end":{"line":16,"column":23}},"14":{"start":{"line":19,"column":8},"end":{"line":19,"column":67}},"15":{"start":{"line":22,"column":0},"end":{"line":22,"column":34}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":8,"column":22},"end":{"line":8,"column":23}},"loc":{"start":{"line":8,"column":32},"end":{"line":11,"column":1}},"line":8},"1":{"name":"(anonymous_1)","decl":{"start":{"line":13,"column":20},"end":{"line":13,"column":21}},"loc":{"start":{"line":13,"column":31},"end":{"line":21,"column":1}},"line":13}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":0,"12":0,"13":0,"14":0,"15":1},"f":{"0":1,"1":0},"b":{},"inputSourceMap":{"version":3,"file":"/app_backend/src/helpers/handleToken.ts","sources":["/app_backend/src/helpers/handleToken.ts"],"names":[],"mappings":";;;AAAA,yBAAuB;AACvB,+CAA4C;AAE5C,0DAAqD;AAErD,MAAM,UAAU,GAAG,OAAO,CAAC,GAAG,CAAC,UAAoB,CAAC;AAE7C,MAAM,aAAa,GAAG,CAAC,IAAU,EAAU,EAAE;IAClD,MAAM,EAAE,EAAE,EAAE,QAAQ,EAAE,SAAS,EAAE,GAAG,IAAI,CAAC;IACzC,OAAO,IAAA,mBAAI,EAAC,EAAE,EAAE,EAAE,QAAQ,EAAE,SAAS,EAAE,EAAE,UAAU,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;AAC5E,CAAC,CAAA;AAHY,QAAA,aAAa,iBAGzB;AAEM,MAAM,WAAW,GAAG,CAAC,KAAa,EAAQ,EAAE;IACjD,IAAI;QACF,MAAM,OAAO,GAAG,IAAA,qBAAM,EAAC,KAAK,EAAE,UAAU,CAAS,CAAC;QAClD,OAAO,OAAO,CAAC;KAChB;IAAC,OAAO,KAAK,EAAE;QACd,MAAM,IAAI,KAAK,CAAC,2BAAW,CAAC,aAAa,CAAC,CAAC;KAC5C;AACH,CAAC,CAAA;AAPY,QAAA,WAAW,eAOvB","sourcesContent":["import 'dotenv/config';\nimport { sign, verify } from 'jsonwebtoken';\nimport { User } from '../types/User';\nimport { ErrorsTypes } from '../types/ErrorsCatalog';\n\nconst JWT_SECRET = process.env.JWT_SECRET as string;\n\nexport const generateToken = (user: User): string => {\n  const { id, username, accountId } = user;\n  return sign({ id, username, accountId }, JWT_SECRET, { expiresIn: '1d' });\n}\n\nexport const verifyToken = (token: string): User => {\n  try {\n    const payload = verify(token, JWT_SECRET) as User;\n    return payload;\n  } catch (error) {\n    throw new Error(ErrorsTypes.INVALID_TOKEN);\n  }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"6464ebe50740f50e7b617129b37089fad53cef12"},"/app_backend/src/routes/user.ts":{"path":"/app_backend/src/routes/user.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":18},"end":{"line":3,"column":36}},"2":{"start":{"line":4,"column":15},"end":{"line":4,"column":45}},"3":{"start":{"line":5,"column":15},"end":{"line":5,"column":45}},"4":{"start":{"line":6,"column":15},"end":{"line":6,"column":38}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":44}},"6":{"start":{"line":8,"column":0},"end":{"line":8,"column":61}},"7":{"start":{"line":9,"column":0},"end":{"line":9,"column":25}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"/app_backend/src/routes/user.ts","sources":["/app_backend/src/routes/user.ts"],"names":[],"mappings":";;AAAA,qCAAiC;AACjC,8CAAiD;AACjD,8CAAuC;AAEvC,MAAM,MAAM,GAAG,IAAA,gBAAM,GAAE,CAAC;AAExB,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,cAAc,CAAC,UAAU,CAAC,CAAC;AAE5C,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,cAAI,EAAE,cAAc,CAAC,YAAY,CAAC,CAAC;AAEnD,kBAAe,MAAM,CAAC","sourcesContent":["import { Router } from 'express';\nimport userController from '../controllers/user';\nimport auth from '../middlewares/auth';\n\nconst router = Router();\n\nrouter.post('/', userController.createUser);\n\nrouter.get('/', auth, userController.findAllUsers);\n\nexport default router;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"cb44d62f74427f4a20a8ac13ef804f5fbc887bd1"},"/app_backend/src/controllers/user.ts":{"path":"/app_backend/src/controllers/user.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":15},"end":{"line":3,"column":42}},"2":{"start":{"line":4,"column":21},"end":{"line":4,"column":51}},"3":{"start":{"line":5,"column":19},"end":{"line":9,"column":1}},"4":{"start":{"line":6,"column":20},"end":{"line":6,"column":28}},"5":{"start":{"line":7,"column":17},"end":{"line":7,"column":57}},"6":{"start":{"line":8,"column":4},"end":{"line":8,"column":63}},"7":{"start":{"line":10,"column":21},"end":{"line":14,"column":1}},"8":{"start":{"line":11,"column":19},"end":{"line":11,"column":32}},"9":{"start":{"line":12,"column":21},"end":{"line":12,"column":58}},"10":{"start":{"line":13,"column":4},"end":{"line":13,"column":62}},"11":{"start":{"line":15,"column":0},"end":{"line":18,"column":2}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":19},"end":{"line":5,"column":20}},"loc":{"start":{"line":5,"column":39},"end":{"line":9,"column":1}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":21},"end":{"line":10,"column":22}},"loc":{"start":{"line":10,"column":41},"end":{"line":14,"column":1}},"line":10}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":1,"8":0,"9":0,"10":0,"11":1},"f":{"0":0,"1":0},"b":{},"inputSourceMap":{"version":3,"file":"/app_backend/src/controllers/user.ts","sources":["/app_backend/src/controllers/user.ts"],"names":[],"mappings":";;AACA,2CAA2C;AAG3C,oDAA6C;AAE7C,MAAM,UAAU,GAAG,KAAK,EAAE,GAAY,EAAE,GAA0B,EAAE,EAAE;IACpE,MAAM,OAAO,GAAS,GAAG,CAAC,IAAI,CAAC;IAC/B,MAAM,IAAI,GAAG,MAAM,cAAW,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;IACnD,OAAO,GAAG,CAAC,MAAM,CAAC,oBAAU,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACnD,CAAC,CAAC;AAEF,MAAM,YAAY,GAAG,KAAK,EAAE,GAAY,EAAE,GAA8B,EAAE,EAAE;IAC1E,MAAM,EAAE,EAAE,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;IAC7B,MAAM,QAAQ,GAAG,MAAM,cAAW,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;IACpD,OAAO,GAAG,CAAC,MAAM,CAAC,oBAAU,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AAClD,CAAC,CAAC;AAEF,kBAAe;IACb,UAAU;IACV,YAAY;CACb,CAAC","sourcesContent":["import { Response, Request } from 'express';\nimport userService from '../services/user';\nimport { User } from '../types/User';\nimport { TokenReturn } from './../types/TokenReturn';\nimport StatusHttp from '../types/StatusHttp';\n\nconst createUser = async (req: Request, res: Response<TokenReturn>) => {\n  const userObj: User = req.body;\n  const user = await userService.createUser(userObj);\n  return res.status(StatusHttp.CREATED).json(user);\n};\n\nconst findAllUsers = async (req: Request, res: Response<Partial<User>[]>) => {\n  const { id } = req.body.user;\n  const accounts = await userService.findAllUsers(id);\n  return res.status(StatusHttp.OK).json(accounts);\n};\n\nexport default {\n  createUser,\n  findAllUsers,\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"94d2b5a8890d233ab2a386773b38b2d54fbe7400"},"/app_backend/src/services/user.ts":{"path":"/app_backend/src/services/user.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":15},"end":{"line":3,"column":49}},"2":{"start":{"line":4,"column":18},"end":{"line":4,"column":55}},"3":{"start":{"line":5,"column":17},"end":{"line":5,"column":46}},"4":{"start":{"line":6,"column":20},"end":{"line":6,"column":40}},"5":{"start":{"line":7,"column":27},"end":{"line":7,"column":67}},"6":{"start":{"line":8,"column":25},"end":{"line":8,"column":61}},"7":{"start":{"line":9,"column":22},"end":{"line":9,"column":55}},"8":{"start":{"line":10,"column":24},"end":{"line":10,"column":57}},"9":{"start":{"line":11,"column":19},"end":{"line":29,"column":1}},"10":{"start":{"line":12,"column":35},"end":{"line":12,"column":42}},"11":{"start":{"line":13,"column":4},"end":{"line":13,"column":54}},"12":{"start":{"line":14,"column":23},"end":{"line":14,"column":76}},"13":{"start":{"line":15,"column":4},"end":{"line":16,"column":73}},"14":{"start":{"line":16,"column":8},"end":{"line":16,"column":73}},"15":{"start":{"line":17,"column":20},"end":{"line":23,"column":6}},"16":{"start":{"line":18,"column":32},"end":{"line":18,"column":38}},"17":{"start":{"line":19,"column":34},"end":{"line":19,"column":111}},"18":{"start":{"line":20,"column":21},"end":{"line":20,"column":65}},"19":{"start":{"line":21,"column":21},"end":{"line":21,"column":106}},"20":{"start":{"line":22,"column":8},"end":{"line":22,"column":20}},"21":{"start":{"line":24,"column":4},"end":{"line":28,"column":6}},"22":{"start":{"line":30,"column":21},"end":{"line":35,"column":1}},"23":{"start":{"line":31,"column":4},"end":{"line":34,"column":7}},"24":{"start":{"line":36,"column":0},"end":{"line":39,"column":2}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":11,"column":19},"end":{"line":11,"column":20}},"loc":{"start":{"line":11,"column":38},"end":{"line":29,"column":1}},"line":11},"1":{"name":"(anonymous_1)","decl":{"start":{"line":17,"column":55},"end":{"line":17,"column":56}},"loc":{"start":{"line":17,"column":78},"end":{"line":23,"column":5}},"line":17},"2":{"name":"(anonymous_2)","decl":{"start":{"line":30,"column":21},"end":{"line":30,"column":22}},"loc":{"start":{"line":30,"column":36},"end":{"line":35,"column":1}},"line":30}},"branchMap":{"0":{"loc":{"start":{"line":15,"column":4},"end":{"line":16,"column":73}},"type":"if","locations":[{"start":{"line":15,"column":4},"end":{"line":16,"column":73}},{"start":{"line":15,"column":4},"end":{"line":16,"column":73}}],"line":15}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":1,"23":0,"24":1},"f":{"0":0,"1":0,"2":0},"b":{"0":[0,0]},"inputSourceMap":{"version":3,"file":"/app_backend/src/services/user.ts","sources":["/app_backend/src/services/user.ts"],"names":[],"mappings":";;AAAA,kDAAgD;AAChD,wDAAsD;AACtD,+CAAmD;AACnD,yCAA+B;AAG/B,oEAAiE;AACjE,8DAAyD;AACzD,wDAAuD;AACvD,0DAAqD;AAErD,MAAM,UAAU,GAAG,KAAK,EAAE,OAAa,EAAwB,EAAE;IAC/D,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,GAAG,OAAO,CAAC;IACvC,IAAA,mCAAgB,EAAC,OAAO,CAAC,CAAC;IAE1B,MAAM,UAAU,GAAG,MAAM,cAAS,CAAC,OAAO,CAAC,EAAE,KAAK,EAAE,EAAE,QAAQ,EAAE,EAAE,CAAC,CAAC;IACpE,IAAI,UAAU;QAAE,MAAM,IAAI,KAAK,CAAC,2BAAW,CAAC,mBAAmB,CAAC,CAAC;IAEjE,MAAM,OAAO,GAAG,MAAM,gBAAiB,CAAC,WAAW,CAAC,KAAK,EAAE,WAAW,EAAE,EAAE;QACxE,MAAM,eAAe,GAAG,MAAM,CAAC;QAC/B,MAAM,EAAE,EAAE,EAAE,SAAS,EAAE,GAAG,MAAM,iBAAY,CAAC,MAAM,CACjD,EAAE,OAAO,EAAE,eAAe,EAAE,EAAC,EAAE,WAAW,EAAE,CAC7C,CAAC;QACF,MAAM,IAAI,GAAG,IAAA,6BAAY,EAAC,QAAQ,CAAC,CAAC;QACpC,MAAM,IAAI,GAAG,MAAM,cAAS,CAAC,MAAM,CACjC,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE,SAAS,EAAE,EAAE,EAAE,WAAW,EAAE,CACzD,CAAC;QACF,OAAO,IAAI,CAAC;IACd,CAAC,CAAC,CAAC;IAEH,OAAO;QACL,QAAQ,EAAE,OAAO,CAAC,QAAQ;QAC1B,OAAO,EAAE,OAAO,CAAC,SAAS;QAC1B,KAAK,EAAE,IAAA,2BAAa,EAAC,OAAO,CAAC;KAC9B,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,YAAY,GAAG,KAAK,EAAE,GAAW,EAA4B,EAAE;IACnE,OAAO,MAAM,cAAS,CAAC,OAAO,CAAC;QAC7B,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,cAAE,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE;QACpC,UAAU,EAAE,EAAE,OAAO,EAAE,CAAC,UAAU,CAAC,EAAE;KACtC,CAAC,CAAC;AACL,CAAC,CAAC;AAEF,kBAAe;IACb,UAAU;IACV,YAAY;CACb,CAAC","sourcesContent":["import UserModel from '../database/models/User';\nimport AccountModel from '../database/models/Account';\nimport sequelizeInstance from '../database/models';\nimport { Op } from 'sequelize';\nimport { User } from '../types/User';\nimport { TokenReturn } from './../types/TokenReturn';\nimport { validateUserData } from './../helpers/validateUserData';\nimport { hashPassword } from '../helpers/passwordCrypto';\nimport { generateToken } from '../helpers/handleToken';\nimport { ErrorsTypes } from '../types/ErrorsCatalog';\n\nconst createUser = async (userObj: User): Promise<TokenReturn> => {  \n  const { username, password } = userObj;\n  validateUserData(userObj);\n\n  const userExists = await UserModel.findOne({ where: { username } });\n  if (userExists) throw new Error(ErrorsTypes.USER_ALREADY_EXISTS);\n  \n  const newUser = await sequelizeInstance.transaction(async (transaction) => {\n    const INITIAL_BALANCE = 100.00;\n    const { id: accountId } = await AccountModel.create(\n      { balance: INITIAL_BALANCE },{ transaction }\n    );\n    const hash = hashPassword(password);\n    const user = await UserModel.create(\n      { username, password: hash, accountId }, { transaction }\n    );\n    return user;\n  });\n\n  return {\n    username: newUser.username,\n    account: newUser.accountId,\n    token: generateToken(newUser),\n  };\n};\n\nconst findAllUsers = async (ids: number): Promise<Partial<User>[]> => {\n  return await UserModel.findAll({\n    where: { id: { [Op.notIn]: [ids] } },\n    attributes: { exclude: ['password'] },\n  });\n};\n\nexport default {\n  createUser,\n  findAllUsers,\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"3ad554d2b095a68077b66c57e14044ba4bdf6ab2"},"/app_backend/src/helpers/validateUserData.ts":{"path":"/app_backend/src/helpers/validateUserData.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":34}},"2":{"start":{"line":4,"column":15},"end":{"line":4,"column":39}},"3":{"start":{"line":5,"column":25},"end":{"line":10,"column":1}},"4":{"start":{"line":6,"column":24},"end":{"line":6,"column":80}},"5":{"start":{"line":7,"column":17},"end":{"line":7,"column":47}},"6":{"start":{"line":8,"column":4},"end":{"line":9,"column":25}},"7":{"start":{"line":9,"column":8},"end":{"line":9,"column":25}},"8":{"start":{"line":11,"column":0},"end":{"line":11,"column":44}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":25},"end":{"line":5,"column":26}},"loc":{"start":{"line":5,"column":38},"end":{"line":10,"column":1}},"line":5}},"branchMap":{"0":{"loc":{"start":{"line":8,"column":4},"end":{"line":9,"column":25}},"type":"if","locations":[{"start":{"line":8,"column":4},"end":{"line":9,"column":25}},{"start":{"line":8,"column":4},"end":{"line":9,"column":25}}],"line":8}},"s":{"0":1,"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":1},"f":{"0":0},"b":{"0":[0,0]},"inputSourceMap":{"version":3,"file":"/app_backend/src/helpers/validateUserData.ts","sources":["/app_backend/src/helpers/validateUserData.ts"],"names":[],"mappings":";;;AACA,wCAA2C;AAEpC,MAAM,gBAAgB,GAAG,CAAC,OAAa,EAAQ,EAAE;IACtD,MAAM,WAAW,GAAG,iBAAU,CAAC,OAAO,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAA;IACrE,MAAM,IAAI,GAAG,WAAW,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;IAC5C,IAAI,CAAC,IAAI,CAAC,OAAO;QAAE,MAAM,IAAI,CAAC,KAAK,CAAC;AACtC,CAAC,CAAC;AAJW,QAAA,gBAAgB,oBAI3B","sourcesContent":["import { User } from '../types/User';\nimport { userSchema } from '../types/User';\n\nexport const validateUserData = (userObj: User): void => {\n  const userPartial = userSchema.partial({ id: true, accountId: true })\n  const user = userPartial.safeParse(userObj);\n  if (!user.success) throw user.error;\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"75240b1e093f29f79a74bcd896b18528ebb6aaf8"},"/app_backend/src/types/User.ts":{"path":"/app_backend/src/types/User.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":28}},"2":{"start":{"line":4,"column":14},"end":{"line":4,"column":28}},"3":{"start":{"line":5,"column":19},"end":{"line":14,"column":2}},"4":{"start":{"line":15,"column":0},"end":{"line":15,"column":32}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"/app_backend/src/types/User.ts","sources":["/app_backend/src/types/User.ts"],"names":[],"mappings":";;;AAAA,6BAAwB;AAExB,MAAM,UAAU,GAAG,OAAC,CAAC,MAAM,CAAC;IAC1B,EAAE,EAAE,OAAC,CAAC,MAAM,EAAE;IACd,QAAQ,EAAE,OAAC,CAAC,MAAM,CAAC,EAAE,cAAc,EAAE,sBAAsB,EAAE,CAAC;SAC3D,GAAG,CAAC,CAAC,EAAE,EAAE,OAAO,EAAE,6CAA6C,EAAE,CAAC;IACrE,QAAQ,EAAE,OAAC,CAAC,MAAM,CAAC,EAAE,cAAc,EAAE,sBAAsB,EAAE,CAAC;SAC3D,GAAG,CAAC,CAAC,EAAE,EAAE,OAAO,EAAE,6CAA6C,EAAE,CAAC;SAClE,KAAK,CAAC,OAAO,EAAE,EAAE,OAAO,EAAE,mDAAmD,EAAE,CAAC;SAChF,KAAK,CAAC,OAAO,EAAE,EAAE,OAAO,EAAE,mDAAmD,EAAE,CAAC;IACnF,SAAS,EAAE,OAAC,CAAC,MAAM,EAAE;CACtB,CAAC,CAAC;AAGM,gCAAU","sourcesContent":["import { z } from 'zod';\n\nconst userSchema = z.object({\n  id: z.number(),\n  username: z.string({ required_error: 'username is required' })\n    .min(3, { message: 'username must be at least 3 characters long' }),\n  password: z.string({ required_error: 'password is required' })\n    .min(8, { message: 'password must be at least 8 characters long' })\n    .regex(/[A-Z]/, { message: 'password must have at least one upper case letter' })\n    .regex(/[0-9]/, { message: 'password must have at least one numeric character' }),\n  accountId: z.number(),\n});\n\nexport type User = z.infer<typeof userSchema>;\nexport { userSchema };\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ce4ec2d7a8f6674be85f3828fa3bc910656fd9d1"},"/app_backend/src/middlewares/auth.ts":{"path":"/app_backend/src/middlewares/auth.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":22},"end":{"line":3,"column":55}},"2":{"start":{"line":4,"column":24},"end":{"line":4,"column":57}},"3":{"start":{"line":5,"column":13},"end":{"line":17,"column":1}},"4":{"start":{"line":6,"column":18},"end":{"line":6,"column":43}},"5":{"start":{"line":7,"column":4},"end":{"line":8,"column":69}},"6":{"start":{"line":8,"column":8},"end":{"line":8,"column":69}},"7":{"start":{"line":9,"column":4},"end":{"line":16,"column":5}},"8":{"start":{"line":10,"column":24},"end":{"line":10,"column":61}},"9":{"start":{"line":11,"column":8},"end":{"line":11,"column":32}},"10":{"start":{"line":12,"column":8},"end":{"line":12,"column":15}},"11":{"start":{"line":15,"column":8},"end":{"line":15,"column":67}},"12":{"start":{"line":18,"column":0},"end":{"line":18,"column":23}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":13},"end":{"line":5,"column":14}},"loc":{"start":{"line":5,"column":39},"end":{"line":17,"column":1}},"line":5}},"branchMap":{"0":{"loc":{"start":{"line":7,"column":4},"end":{"line":8,"column":69}},"type":"if","locations":[{"start":{"line":7,"column":4},"end":{"line":8,"column":69}},{"start":{"line":7,"column":4},"end":{"line":8,"column":69}}],"line":7}},"s":{"0":1,"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1},"f":{"0":0},"b":{"0":[0,0]},"inputSourceMap":{"version":3,"file":"/app_backend/src/middlewares/auth.ts","sources":["/app_backend/src/middlewares/auth.ts"],"names":[],"mappings":";;AACA,wDAAqD;AACrD,0DAAqD;AAErD,MAAM,IAAI,GAAG,KAAK,EAAE,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;IACrE,MAAM,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,aAAa,CAAC;IACxC,IAAI,CAAC,KAAK;QAAE,MAAM,IAAI,KAAK,CAAC,2BAAW,CAAC,eAAe,CAAC,CAAC;IAEzD,IAAI;QACF,MAAM,OAAO,GAAG,IAAA,yBAAW,EAAC,KAAK,CAAC,CAAC;QACnC,GAAG,CAAC,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC;QACxB,IAAI,EAAE,CAAC;KACR;IAAC,OAAO,KAAK,EAAE;QACd,MAAM,IAAI,KAAK,CAAC,2BAAW,CAAC,aAAa,CAAC,CAAC;KAC5C;AACH,CAAC,CAAA;AAED,kBAAe,IAAI,CAAC","sourcesContent":["import { Request, Response, NextFunction } from 'express';\nimport { verifyToken } from '../helpers/handleToken';\nimport { ErrorsTypes } from '../types/ErrorsCatalog';\n\nconst auth = async (req: Request, res: Response, next: NextFunction) => {\n  const token = req.headers.authorization;\n  if (!token) throw new Error(ErrorsTypes.NOT_FOUND_TOKEN);\n\n  try {\n    const payload = verifyToken(token);\n    req.body.user = payload;\n    next();\n  } catch (error) {\n    throw new Error(ErrorsTypes.INVALID_TOKEN);\n  }\n}\n\nexport default auth;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"dfb0145b4572e88d3f2ff4a263125b3ee8fd7279"},"/app_backend/src/routes/account.ts":{"path":"/app_backend/src/routes/account.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":18},"end":{"line":3,"column":36}},"2":{"start":{"line":4,"column":18},"end":{"line":4,"column":51}},"3":{"start":{"line":5,"column":15},"end":{"line":5,"column":45}},"4":{"start":{"line":6,"column":15},"end":{"line":6,"column":38}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":74}},"6":{"start":{"line":8,"column":0},"end":{"line":8,"column":25}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"/app_backend/src/routes/account.ts","sources":["/app_backend/src/routes/account.ts"],"names":[],"mappings":";;AAAA,qCAAiC;AACjC,oDAAuD;AACvD,8CAAuC;AAEvC,MAAM,MAAM,GAAG,IAAA,gBAAM,GAAE,CAAC;AAExB,MAAM,CAAC,GAAG,CAAC,UAAU,EAAE,cAAI,EAAE,iBAAiB,CAAC,eAAe,CAAC,CAAC;AAEhE,kBAAe,MAAM,CAAC","sourcesContent":["import { Router } from 'express';\nimport accountController from '../controllers/account';\nimport auth from '../middlewares/auth';\n\nconst router = Router();\n\nrouter.get('/balance', auth, accountController.findBalanceById);\n\nexport default router;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"84e09b6eb6988588b5c76df63c0ed55ef4de97cb"},"/app_backend/src/controllers/account.ts":{"path":"/app_backend/src/controllers/account.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":18},"end":{"line":3,"column":48}},"2":{"start":{"line":4,"column":21},"end":{"line":4,"column":51}},"3":{"start":{"line":5,"column":24},"end":{"line":9,"column":1}},"4":{"start":{"line":6,"column":19},"end":{"line":6,"column":32}},"5":{"start":{"line":7,"column":20},"end":{"line":7,"column":63}},"6":{"start":{"line":8,"column":4},"end":{"line":8,"column":61}},"7":{"start":{"line":10,"column":0},"end":{"line":10,"column":38}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":24},"end":{"line":5,"column":25}},"loc":{"start":{"line":5,"column":44},"end":{"line":9,"column":1}},"line":5}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":1},"f":{"0":0},"b":{},"inputSourceMap":{"version":3,"file":"/app_backend/src/controllers/account.ts","sources":["/app_backend/src/controllers/account.ts"],"names":[],"mappings":";;AACA,iDAAgD;AAChD,oDAA6C;AAG7C,MAAM,eAAe,GAAG,KAAK,EAAE,GAAY,EAAE,GAA+B,EAAE,EAAE;IAC9E,MAAM,EAAE,EAAE,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;IAC7B,MAAM,OAAO,GAAG,MAAM,iBAAa,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC;IACxD,OAAO,GAAG,CAAC,MAAM,CAAC,oBAAU,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AACjD,CAAC,CAAC;AAEF,kBAAe,EAAE,eAAe,EAAE,CAAC","sourcesContent":["import { Request, Response } from 'express';\nimport accountSevice from '../services/account';\nimport StatusHttp from '../types/StatusHttp';\nimport { Account } from '../types/Account';\n\nconst findBalanceById = async (req: Request, res: Response<Partial<Account>>) => {\n  const { id } = req.body.user;\n  const balance = await accountSevice.findBalanceById(id);\n  return res.status(StatusHttp.OK).json(balance);\n};\n\nexport default { findBalanceById };\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"e6f86c4eb9b22c94b54c49de7d7b5a93c2f163cb"},"/app_backend/src/services/account.ts":{"path":"/app_backend/src/services/account.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":38}},"2":{"start":{"line":4,"column":18},"end":{"line":4,"column":55}},"3":{"start":{"line":5,"column":15},"end":{"line":5,"column":49}},"4":{"start":{"line":6,"column":24},"end":{"line":6,"column":57}},"5":{"start":{"line":7,"column":29},"end":{"line":18,"column":1}},"6":{"start":{"line":8,"column":4},"end":{"line":17,"column":5}},"7":{"start":{"line":9,"column":52},"end":{"line":12,"column":10}},"8":{"start":{"line":13,"column":8},"end":{"line":13,"column":38}},"9":{"start":{"line":16,"column":8},"end":{"line":16,"column":68}},"10":{"start":{"line":19,"column":0},"end":{"line":19,"column":52}},"11":{"start":{"line":20,"column":24},"end":{"line":25,"column":1}},"12":{"start":{"line":21,"column":20},"end":{"line":21,"column":95}},"13":{"start":{"line":22,"column":4},"end":{"line":23,"column":69}},"14":{"start":{"line":23,"column":8},"end":{"line":23,"column":69}},"15":{"start":{"line":24,"column":4},"end":{"line":24,"column":19}},"16":{"start":{"line":26,"column":0},"end":{"line":26,"column":38}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":29},"end":{"line":7,"column":30}},"loc":{"start":{"line":7,"column":49},"end":{"line":18,"column":1}},"line":7},"1":{"name":"(anonymous_1)","decl":{"start":{"line":20,"column":24},"end":{"line":20,"column":25}},"loc":{"start":{"line":20,"column":38},"end":{"line":25,"column":1}},"line":20}},"branchMap":{"0":{"loc":{"start":{"line":22,"column":4},"end":{"line":23,"column":69}},"type":"if","locations":[{"start":{"line":22,"column":4},"end":{"line":23,"column":69}},{"start":{"line":22,"column":4},"end":{"line":23,"column":69}}],"line":22}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":1,"11":1,"12":0,"13":0,"14":0,"15":0,"16":1},"f":{"0":0,"1":0},"b":{"0":[0,0]},"inputSourceMap":{"version":3,"file":"/app_backend/src/services/account.ts","sources":["/app_backend/src/services/account.ts"],"names":[],"mappings":";;;AAAA,wDAAsD;AACtD,kDAAgD;AAEhD,0DAAqD;AAG9C,MAAM,oBAAoB,GAAG,KAAK,EAAE,QAAgB,EAAE,EAAE;IAC7D,IAAI;QACF,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,EAAE,OAAO,EAAE,EAAE,GAAG,MAAM,cAAS,CAAC,OAAO,CAAC;YAClE,KAAK,EAAE,EAAE,QAAQ,EAAE,EAAE,UAAU,EAAE,CAAC,WAAW,CAAC;YAC9C,OAAO,EAAE,CAAC,EAAE,KAAK,EAAE,iBAAY,EAAE,EAAE,EAAE,SAAS,EAAE,UAAU,EAAE,CAAC,SAAS,CAAC,EAAE,CAAC;SAC3E,CAA6B,CAAC;QAC/B,OAAO,EAAE,SAAS,EAAG,OAAO,EAAE,CAAC;KAChC;IAAC,OAAO,KAAK,EAAE;QACd,MAAM,IAAI,KAAK,CAAC,2BAAW,CAAC,cAAc,CAAC,CAAC;KAC7C;AACH,CAAC,CAAC;AAVW,QAAA,oBAAoB,wBAU/B;AAEF,MAAM,eAAe,GAAG,KAAK,EAAE,EAAU,EAA6B,EAAE;IACtE,MAAM,OAAO,GAAG,MAAM,iBAAY,CAAC,OAAO,CACxC,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,UAAU,EAAE,CAAC,SAAS,CAAC,EAAE,CAC3C,CAAC;IACF,IAAI,CAAC,OAAO;QAAE,MAAM,IAAI,KAAK,CAAC,2BAAW,CAAC,eAAe,CAAC,CAAC;IAC3D,OAAO,OAAO,CAAC;AACjB,CAAC,CAAC;AAEF,kBAAe,EAAE,eAAe,EAAE,CAAC","sourcesContent":["import AccountModel from '../database/models/Account';\nimport UserModel from '../database/models/User';\nimport { Account } from '../types/Account';\nimport { ErrorsTypes } from '../types/ErrorsCatalog';\nimport { AccountAmount } from '../types/Account';\n\nexport const getAccountByUsername = async (username: string) => {\n  try {\n    const { accountId, account: { balance } } = await UserModel.findOne({\n      where: { username }, attributes: ['accountId'],\n      include: [{ model: AccountModel, as: 'account', attributes: ['balance'] }],\n    }) as unknown as AccountAmount;\n    return { accountId , balance };\n  } catch (error) {\n    throw new Error(ErrorsTypes.USER_NOT_FOUND);\n  }\n};\n\nconst findBalanceById = async (id: string): Promise<Partial<Account>> => {\n  const balance = await AccountModel.findOne(\n    { where: { id }, attributes: ['balance'] },\n  );\n  if (!balance) throw new Error(ErrorsTypes.INVALID_ACCOUNT);\n  return balance;\n};\n\nexport default { findBalanceById };\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b11c09e27559cdd91bfe69f5bd0b017397a49ae2"},"/app_backend/src/routes/transaction.ts":{"path":"/app_backend/src/routes/transaction.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":18},"end":{"line":3,"column":36}},"2":{"start":{"line":4,"column":22},"end":{"line":4,"column":59}},"3":{"start":{"line":5,"column":15},"end":{"line":5,"column":45}},"4":{"start":{"line":6,"column":15},"end":{"line":6,"column":38}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":74}},"6":{"start":{"line":8,"column":0},"end":{"line":8,"column":74}},"7":{"start":{"line":9,"column":0},"end":{"line":9,"column":84}},"8":{"start":{"line":10,"column":0},"end":{"line":10,"column":84}},"9":{"start":{"line":11,"column":0},"end":{"line":11,"column":81}},"10":{"start":{"line":12,"column":0},"end":{"line":12,"column":25}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"/app_backend/src/routes/transaction.ts","sources":["/app_backend/src/routes/transaction.ts"],"names":[],"mappings":";;AAAA,qCAAiC;AACjC,4DAA+D;AAC/D,8CAAuC;AAEvC,MAAM,MAAM,GAAG,IAAA,gBAAM,GAAE,CAAC;AAExB,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,cAAI,EAAE,qBAAqB,CAAC,iBAAiB,CAAC,CAAC;AAEhE,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,cAAI,EAAE,qBAAqB,CAAC,kBAAkB,CAAC,CAAC;AAEhE,MAAM,CAAC,GAAG,CAAC,UAAU,EAAE,cAAI,EAAE,qBAAqB,CAAC,qBAAqB,CAAC,CAAC;AAE1E,MAAM,CAAC,GAAG,CAAC,WAAW,EAAE,cAAI,EAAE,qBAAqB,CAAC,oBAAoB,CAAC,CAAC;AAE1E,MAAM,CAAC,GAAG,CAAC,OAAO,EAAE,cAAI,EAAE,qBAAqB,CAAC,qBAAqB,CAAC,CAAC;AAEvE,kBAAe,MAAM,CAAC","sourcesContent":["import { Router } from 'express';\nimport transactionController from '../controllers/transaction';\nimport auth from '../middlewares/auth';\n\nconst router = Router();\n\nrouter.post('/', auth, transactionController.createTransaction);\n\nrouter.get('/', auth, transactionController.getAllTransactions);\n\nrouter.get('/cash-in', auth, transactionController.getCreditTransactions);\n\nrouter.get('/cash-out', auth, transactionController.getDebitTransactions);\n\nrouter.get('/date', auth, transactionController.getTransactionsByDate);\n\nexport default router;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"d5a4fdaa98af08cc8a142ce358fdb27ae1ca8311"},"/app_backend/src/controllers/transaction.ts":{"path":"/app_backend/src/controllers/transaction.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":22},"end":{"line":3,"column":56}},"2":{"start":{"line":4,"column":21},"end":{"line":4,"column":51}},"3":{"start":{"line":5,"column":26},"end":{"line":10,"column":1}},"4":{"start":{"line":6,"column":21},"end":{"line":6,"column":29}},"5":{"start":{"line":7,"column":40},"end":{"line":7,"column":48}},"6":{"start":{"line":8,"column":24},"end":{"line":8,"column":104}},"7":{"start":{"line":9,"column":4},"end":{"line":9,"column":70}},"8":{"start":{"line":11,"column":27},"end":{"line":15,"column":1}},"9":{"start":{"line":12,"column":26},"end":{"line":12,"column":39}},"10":{"start":{"line":13,"column":25},"end":{"line":13,"column":82}},"11":{"start":{"line":14,"column":4},"end":{"line":14,"column":66}},"12":{"start":{"line":16,"column":30},"end":{"line":20,"column":1}},"13":{"start":{"line":17,"column":26},"end":{"line":17,"column":39}},"14":{"start":{"line":18,"column":25},"end":{"line":18,"column":85}},"15":{"start":{"line":19,"column":4},"end":{"line":19,"column":66}},"16":{"start":{"line":21,"column":29},"end":{"line":25,"column":1}},"17":{"start":{"line":22,"column":26},"end":{"line":22,"column":39}},"18":{"start":{"line":23,"column":25},"end":{"line":23,"column":84}},"19":{"start":{"line":24,"column":4},"end":{"line":24,"column":66}},"20":{"start":{"line":26,"column":30},"end":{"line":31,"column":1}},"21":{"start":{"line":27,"column":26},"end":{"line":27,"column":39}},"22":{"start":{"line":28,"column":24},"end":{"line":28,"column":33}},"23":{"start":{"line":29,"column":25},"end":{"line":29,"column":91}},"24":{"start":{"line":30,"column":4},"end":{"line":30,"column":66}},"25":{"start":{"line":32,"column":0},"end":{"line":38,"column":2}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":26},"end":{"line":5,"column":27}},"loc":{"start":{"line":5,"column":46},"end":{"line":10,"column":1}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":11,"column":27},"end":{"line":11,"column":28}},"loc":{"start":{"line":11,"column":47},"end":{"line":15,"column":1}},"line":11},"2":{"name":"(anonymous_2)","decl":{"start":{"line":16,"column":30},"end":{"line":16,"column":31}},"loc":{"start":{"line":16,"column":50},"end":{"line":20,"column":1}},"line":16},"3":{"name":"(anonymous_3)","decl":{"start":{"line":21,"column":29},"end":{"line":21,"column":30}},"loc":{"start":{"line":21,"column":49},"end":{"line":25,"column":1}},"line":21},"4":{"name":"(anonymous_4)","decl":{"start":{"line":26,"column":30},"end":{"line":26,"column":31}},"loc":{"start":{"line":26,"column":50},"end":{"line":31,"column":1}},"line":26}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":1,"9":0,"10":0,"11":0,"12":1,"13":0,"14":0,"15":0,"16":1,"17":0,"18":0,"19":0,"20":1,"21":0,"22":0,"23":0,"24":0,"25":1},"f":{"0":0,"1":0,"2":0,"3":0,"4":0},"b":{},"inputSourceMap":{"version":3,"file":"/app_backend/src/controllers/transaction.ts","sources":["/app_backend/src/controllers/transaction.ts"],"names":[],"mappings":";;AACA,yDAAyD;AAEzD,oDAA6C;AAE7C,MAAM,iBAAiB,GAAG,KAAK,EAAE,GAAY,EAAE,GAA0B,EAAE,EAAE;IAC3E,MAAM,EAAE,IAAI,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC;IAC1B,MAAM,EAAE,gBAAgB,EAAE,KAAK,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC;IAE7C,MAAM,WAAW,GAAG,MAAM,qBAAkB,CAAC,iBAAiB,CAC5D,IAAI,EACJ,EAAE,gBAAgB,EAAE,KAAK,EAAE,CAC5B,CAAC;IAEF,OAAO,GAAG,CAAC,MAAM,CAAC,oBAAU,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AAC1D,CAAC,CAAC;AAEF,MAAM,kBAAkB,GAAG,KAAK,EAAE,GAAY,EAAE,GAAiC,EAAE,EAAE;IACnF,MAAM,EAAE,SAAS,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;IACpC,MAAM,YAAY,GAAG,MAAM,qBAAkB,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC;IAC5E,OAAO,GAAG,CAAC,MAAM,CAAC,oBAAU,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;AACtD,CAAC,CAAC;AAEF,MAAM,qBAAqB,GAAG,KAAK,EAAE,GAAY,EAAE,GAAiC,EAAE,EAAE;IACtF,MAAM,EAAE,SAAS,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;IACpC,MAAM,YAAY,GAAG,MAAM,qBAAkB,CAAC,qBAAqB,CAAC,SAAS,CAAC,CAAC;IAC/E,OAAO,GAAG,CAAC,MAAM,CAAC,oBAAU,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;AACtD,CAAC,CAAC;AAEF,MAAM,oBAAoB,GAAG,KAAK,EAAE,GAAY,EAAE,GAAiC,EAAE,EAAE;IACrF,MAAM,EAAE,SAAS,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;IACpC,MAAM,YAAY,GAAG,MAAM,qBAAkB,CAAC,oBAAoB,CAAC,SAAS,CAAC,CAAC;IAC9E,OAAO,GAAG,CAAC,MAAM,CAAC,oBAAU,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;AACtD,CAAC,CAAC;AAEF,MAAM,qBAAqB,GAAG,KAAK,EAAE,GAAY,EAAE,GAAiC,EAAE,EAAE;IACtF,MAAM,EAAE,SAAS,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;IACpC,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,GAAG,GAAG,CAAC,KAAsB,CAAC;IAC/C,MAAM,YAAY,GAAG,MAAM,qBAAkB,CAAC,qBAAqB,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;IACrF,OAAO,GAAG,CAAC,MAAM,CAAC,oBAAU,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;AACtD,CAAC,CAAC;AAEF,kBAAe;IACb,iBAAiB;IACjB,kBAAkB;IAClB,qBAAqB;IACrB,oBAAoB;IACpB,qBAAqB;CACtB,CAAC","sourcesContent":["import { Request, Response } from 'express';\nimport transactionService from '../services/transaction';\nimport { Transaction } from '../types/Transaction';\nimport StatusHttp from '../types/StatusHttp';\n\nconst createTransaction = async (req: Request, res: Response<Transaction>) => {\n  const { user } = req.body;\n  const { usernameCredited, value } = req.body;\n\n  const transaction = await transactionService.createTransaction(\n    user,\n    { usernameCredited, value },\n  );\n\n  return res.status(StatusHttp.CREATED).json(transaction);\n};\n\nconst getAllTransactions = async (req: Request, res: Response<Transaction[] | []>) => {\n  const { accountId } = req.body.user;\n  const transactions = await transactionService.getAllTransactions(accountId);\n  return res.status(StatusHttp.OK).json(transactions);\n};\n\nconst getCreditTransactions = async (req: Request, res: Response<Transaction[] | []>) => {\n  const { accountId } = req.body.user;\n  const transactions = await transactionService.getCreditTransactions(accountId);\n  return res.status(StatusHttp.OK).json(transactions);\n};\n\nconst getDebitTransactions = async (req: Request, res: Response<Transaction[] | []>) => {\n  const { accountId } = req.body.user;\n  const transactions = await transactionService.getDebitTransactions(accountId);\n  return res.status(StatusHttp.OK).json(transactions);\n};\n\nconst getTransactionsByDate = async (req: Request, res: Response<Transaction[] | []>) => {\n  const { accountId } = req.body.user;\n  const { q: date } = req.query as { q: string };\n  const transactions = await transactionService.getTransactionsByDate(accountId, date);\n  return res.status(StatusHttp.OK).json(transactions);\n};\n\nexport default {\n  createTransaction,\n  getAllTransactions,\n  getCreditTransactions,\n  getDebitTransactions,\n  getTransactionsByDate,\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"566b2a3d1386138148c5812e728b41ed35e68a2b"},"/app_backend/src/services/transaction.ts":{"path":"/app_backend/src/services/transaction.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":22},"end":{"line":3,"column":63}},"2":{"start":{"line":4,"column":18},"end":{"line":4,"column":55}},"3":{"start":{"line":5,"column":17},"end":{"line":5,"column":46}},"4":{"start":{"line":6,"column":20},"end":{"line":6,"column":40}},"5":{"start":{"line":7,"column":24},"end":{"line":7,"column":57}},"6":{"start":{"line":8,"column":18},"end":{"line":8,"column":38}},"7":{"start":{"line":9,"column":25},"end":{"line":9,"column":61}},"8":{"start":{"line":10,"column":21},"end":{"line":10,"column":53}},"9":{"start":{"line":11,"column":26},"end":{"line":37,"column":1}},"10":{"start":{"line":12,"column":40},"end":{"line":12,"column":54}},"11":{"start":{"line":13,"column":65},"end":{"line":13,"column":72}},"12":{"start":{"line":14,"column":69},"end":{"line":14,"column":128}},"13":{"start":{"line":15,"column":42},"end":{"line":15,"column":98}},"14":{"start":{"line":16,"column":4},"end":{"line":17,"column":68}},"15":{"start":{"line":17,"column":8},"end":{"line":17,"column":68}},"16":{"start":{"line":18,"column":4},"end":{"line":19,"column":76}},"17":{"start":{"line":19,"column":8},"end":{"line":19,"column":76}},"18":{"start":{"line":20,"column":4},"end":{"line":21,"column":74}},"19":{"start":{"line":21,"column":8},"end":{"line":21,"column":74}},"20":{"start":{"line":22,"column":4},"end":{"line":23,"column":67}},"21":{"start":{"line":23,"column":8},"end":{"line":23,"column":67}},"22":{"start":{"line":24,"column":48},"end":{"line":24,"column":142}},"23":{"start":{"line":25,"column":24},"end":{"line":35,"column":6}},"24":{"start":{"line":26,"column":8},"end":{"line":26,"column":114}},"25":{"start":{"line":27,"column":8},"end":{"line":27,"column":116}},"26":{"start":{"line":28,"column":34},"end":{"line":33,"column":27}},"27":{"start":{"line":34,"column":8},"end":{"line":34,"column":33}},"28":{"start":{"line":36,"column":4},"end":{"line":36,"column":23}},"29":{"start":{"line":38,"column":27},"end":{"line":47,"column":1}},"30":{"start":{"line":39,"column":4},"end":{"line":46,"column":7}},"31":{"start":{"line":48,"column":30},"end":{"line":54,"column":1}},"32":{"start":{"line":49,"column":4},"end":{"line":53,"column":7}},"33":{"start":{"line":55,"column":29},"end":{"line":61,"column":1}},"34":{"start":{"line":56,"column":4},"end":{"line":60,"column":7}},"35":{"start":{"line":62,"column":30},"end":{"line":75,"column":1}},"36":{"start":{"line":63,"column":26},"end":{"line":63,"column":60}},"37":{"start":{"line":64,"column":4},"end":{"line":74,"column":7}},"38":{"start":{"line":76,"column":0},"end":{"line":82,"column":2}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":11,"column":26},"end":{"line":11,"column":27}},"loc":{"start":{"line":11,"column":61},"end":{"line":37,"column":1}},"line":11},"1":{"name":"(anonymous_1)","decl":{"start":{"line":25,"column":59},"end":{"line":25,"column":60}},"loc":{"start":{"line":25,"column":82},"end":{"line":35,"column":5}},"line":25},"2":{"name":"(anonymous_2)","decl":{"start":{"line":38,"column":27},"end":{"line":38,"column":28}},"loc":{"start":{"line":38,"column":48},"end":{"line":47,"column":1}},"line":38},"3":{"name":"(anonymous_3)","decl":{"start":{"line":48,"column":30},"end":{"line":48,"column":31}},"loc":{"start":{"line":48,"column":51},"end":{"line":54,"column":1}},"line":48},"4":{"name":"(anonymous_4)","decl":{"start":{"line":55,"column":29},"end":{"line":55,"column":30}},"loc":{"start":{"line":55,"column":50},"end":{"line":61,"column":1}},"line":55},"5":{"name":"(anonymous_5)","decl":{"start":{"line":62,"column":30},"end":{"line":62,"column":31}},"loc":{"start":{"line":62,"column":57},"end":{"line":75,"column":1}},"line":62}},"branchMap":{"0":{"loc":{"start":{"line":16,"column":4},"end":{"line":17,"column":68}},"type":"if","locations":[{"start":{"line":16,"column":4},"end":{"line":17,"column":68}},{"start":{"line":16,"column":4},"end":{"line":17,"column":68}}],"line":16},"1":{"loc":{"start":{"line":18,"column":4},"end":{"line":19,"column":76}},"type":"if","locations":[{"start":{"line":18,"column":4},"end":{"line":19,"column":76}},{"start":{"line":18,"column":4},"end":{"line":19,"column":76}}],"line":18},"2":{"loc":{"start":{"line":20,"column":4},"end":{"line":21,"column":74}},"type":"if","locations":[{"start":{"line":20,"column":4},"end":{"line":21,"column":74}},{"start":{"line":20,"column":4},"end":{"line":21,"column":74}}],"line":20},"3":{"loc":{"start":{"line":22,"column":4},"end":{"line":23,"column":67}},"type":"if","locations":[{"start":{"line":22,"column":4},"end":{"line":23,"column":67}},{"start":{"line":22,"column":4},"end":{"line":23,"column":67}}],"line":22}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":1,"30":0,"31":1,"32":0,"33":1,"34":0,"35":1,"36":0,"37":0,"38":1},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0]},"inputSourceMap":{"version":3,"file":"/app_backend/src/services/transaction.ts","sources":["/app_backend/src/services/transaction.ts"],"names":[],"mappings":";;AAAA,gEAA8D;AAC9D,wDAAsD;AACtD,+CAAmD;AACnD,yCAA+B;AAG/B,0DAAqD;AACrD,uCAAiD;AACjD,8DAA2D;AAC3D,sDAAmD;AAEnD,MAAM,iBAAiB,GAAG,KAAK,EAAE,OAAa,EAAE,cAAkC,EAAE,EAAE;IACpF,MAAM,EAAE,gBAAgB,EAAE,KAAK,EAAE,GAAG,cAAc,CAAC;IACnD,MAAM,EAAE,SAAS,EAAE,YAAY,EAAE,QAAQ,EAAE,aAAa,EAAE,GAAG,OAAO,CAAC;IAErE,MAAM,EAAE,SAAS,EAAE,aAAa,EAAE,OAAO,EAAE,gBAAgB,EAAE,GAAG,CAC9D,MAAM,IAAA,8BAAoB,EAAC,gBAAgB,CAAC,CAC7C,CAAC;IACF,MAAM,EAAE,OAAO,EAAE,eAAe,EAAE,GAAG,CACnC,MAAM,IAAA,8BAAoB,EAAC,aAAa,CAAC,CAC1C,CAAC;IAEF,IAAI,CAAC,aAAa;QAAE,MAAM,IAAI,KAAK,CAAC,2BAAW,CAAC,cAAc,CAAC,CAAC;IAChE,IAAI,YAAY,KAAK,aAAa;QAAE,MAAM,IAAI,KAAK,CAAC,2BAAW,CAAC,sBAAsB,CAAC,CAAC;IACxF,IAAI,eAAe,GAAG,KAAK;QAAE,MAAM,IAAI,KAAK,CAAC,2BAAW,CAAC,oBAAoB,CAAC,CAAC;IAC/E,IAAI,KAAK,IAAI,CAAC;QAAE,MAAM,IAAI,KAAK,CAAC,2BAAW,CAAC,aAAa,CAAC,CAAC;IAE3D,MAAM,EAAE,cAAc,EAAE,eAAe,EAAE,GAAG,IAAA,+BAAc,EACxD,KAAK,EAAE,MAAM,CAAC,eAAe,CAAC,EAAE,MAAM,CAAC,gBAAgB,CAAC,CACzD,CAAC;IAEF,MAAM,WAAW,GAAG,MAAM,gBAAiB,CAAC,WAAW,CAAE,KAAK,EAAE,WAAW,EAAE,EAAE;QAC7E,MAAM,iBAAY,CAAC,MAAM,CACvB,EAAE,OAAO,EAAE,cAAc,EAAE,EAC3B,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,YAAY,EAAE,EAAE,WAAW,EAAE,CAC7C,CAAC;QACF,MAAM,iBAAY,CAAC,MAAM,CACvB,EAAE,OAAO,EAAE,eAAe,EAAE,EAC5B,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,aAAa,EAAE,EAAE,WAAW,EAAE,CAC9C,CAAC;QACF,MAAM,iBAAiB,GAAG,MAAM,qBAAgB,CAAC,MAAM,CACrD;YACE,gBAAgB,EAAE,YAAY;YAC9B,iBAAiB,EAAE,aAAa;YAChC,KAAK;YACL,SAAS,EAAE,IAAI,IAAI,EAAE;SACtB,EACD,EAAE,WAAW,EAAE,CAChB,CAAC;QACF,OAAO,iBAAiB,CAAC;IAC3B,CAAC,CAAC,CAAC;IAEH,OAAO,WAAW,CAAC;AACrB,CAAC,CAAC;AAEF,MAAM,kBAAkB,GAAG,KAAK,EAAE,SAAiB,EAA+B,EAAE;IAClF,OAAO,MAAM,qBAAgB,CAAC,OAAO,CAAC;QACpC,KAAK,EAAE;YACL,CAAC,cAAE,CAAC,EAAE,CAAC,EAAE;gBACP,EAAE,gBAAgB,EAAE,SAAS,EAAE;gBAC/B,EAAE,iBAAiB,EAAE,SAAS,EAAE;aACjC;SACF;KACF,CAAC,CAAC;AACL,CAAC,CAAC;AAEF,MAAM,qBAAqB,GAAG,KAAK,EAAE,SAAiB,EAA+B,EAAE;IACrF,OAAO,MAAM,qBAAgB,CAAC,OAAO,CAAC;QACpC,KAAK,EAAE;YACL,iBAAiB,EAAE,SAAS;SAC7B;KACF,CAAC,CAAC;AACL,CAAC,CAAC;AAEF,MAAM,oBAAoB,GAAG,KAAK,EAAE,SAAiB,EAA+B,EAAE;IACpF,OAAO,MAAM,qBAAgB,CAAC,OAAO,CAAC;QACpC,KAAK,EAAE;YACL,gBAAgB,EAAE,SAAS;SAC5B;KACF,CAAC,CAAC;AACL,CAAC,CAAC;AAEF,MAAM,qBAAqB,GAAG,KAAK,EAAE,SAAiB,EAAE,IAAY,EACtC,EAAE;IAC9B,MAAM,aAAa,GAAG,IAAA,uBAAU,EAAC,IAAI,CAAC,CAAC;IACvC,OAAO,MAAM,qBAAgB,CAAC,OAAO,CAAC;QACpC,KAAK,EAAE;YACL,CAAC,cAAE,CAAC,EAAE,CAAC,EAAE;gBACP,EAAE,gBAAgB,EAAE,SAAS,EAAE;gBAC/B,EAAE,iBAAiB,EAAE,SAAS,EAAE;aACjC;YACD,SAAS,EAAE;gBACT,CAAC,cAAE,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,aAAa,WAAW,EAAE,GAAG,aAAa,WAAW,CAAC;aACzE;SACF;KACF,CAAC,CAAC;AACL,CAAC,CAAC;AAEF,kBAAe;IACb,iBAAiB;IACjB,kBAAkB;IAClB,qBAAqB;IACrB,oBAAoB;IACpB,qBAAqB;CACtB,CAAC","sourcesContent":["import TransactionModel from '../database/models/Transaction';\nimport AccountModel from '../database/models/Account';\nimport sequelizeInstance from '../database/models';\nimport { Op } from 'sequelize';\nimport { User } from './../types/User';\nimport { TransactionRequest, Transaction } from '../types/Transaction';\nimport { ErrorsTypes } from '../types/ErrorsCatalog';\nimport { getAccountByUsername } from './account';\nimport { calcOfTransfer } from '../helpers/calcTrasaction';\nimport { formatDate } from '../helpers/formatDate';\n\nconst createTransaction = async (userObj: User, transactionObj: TransactionRequest) => {\n  const { usernameCredited, value } = transactionObj;\n  const { accountId: debitAccount, username: debitUsername } = userObj;\n\n  const { accountId: creditAccount, balance: balanceforCredit } = (\n    await getAccountByUsername(usernameCredited)\n  );\n  const { balance: balanceforDebit } = (\n    await getAccountByUsername(debitUsername)\n  );\n  \n  if (!creditAccount) throw new Error(ErrorsTypes.USER_NOT_FOUND);\n  if (debitAccount === creditAccount) throw new Error(ErrorsTypes.INVALID_CREDIT_ACCOUNT);\n  if (balanceforDebit < value) throw new Error(ErrorsTypes.INSUFFICIENT_BALANCE);\n  if (value <= 0) throw new Error(ErrorsTypes.INVALID_VALUE);\n  \n  const { newAmountDebit, newAmountCredit } = calcOfTransfer(\n    value, Number(balanceforDebit), Number(balanceforCredit),\n  );\n\n  const transaction = await sequelizeInstance.transaction( async (transaction) => {    \n    await AccountModel.update(\n      { balance: newAmountDebit },\n      { where: { id: debitAccount }, transaction },\n    );\n    await AccountModel.update(\n      { balance: newAmountCredit },\n      { where: { id: creditAccount }, transaction },\n    );\n    const createTransaction = await TransactionModel.create(\n      {\n        debitedAccountId: debitAccount,\n        creditedAccountId: creditAccount,\n        value,\n        createdAt: new Date()\n      },\n      { transaction }\n    );\n    return createTransaction;\n  });\n\n  return transaction;\n};\n\nconst getAllTransactions = async (accountId: number): Promise<Transaction[] | []> => {\n  return await TransactionModel.findAll({\n    where: {\n      [Op.or]: [\n        { debitedAccountId: accountId },\n        { creditedAccountId: accountId },\n      ],\n    },\n  });\n};\n\nconst getCreditTransactions = async (accountId: number): Promise<Transaction[] | []> => {\n  return await TransactionModel.findAll({\n    where: {\n      creditedAccountId: accountId,\n    },\n  });\n};\n\nconst getDebitTransactions = async (accountId: number): Promise<Transaction[] | []> => {\n  return await TransactionModel.findAll({\n    where: {\n      debitedAccountId: accountId,\n    },\n  });\n};\n\nconst getTransactionsByDate = async (accountId: number, date: string):\n  Promise<Transaction[] | []> => {\n  const convertedDate = formatDate(date);\n  return await TransactionModel.findAll({\n    where: {\n      [Op.or]: [\n        { debitedAccountId: accountId },\n        { creditedAccountId: accountId },\n      ],\n      createdAt: {\n        [Op.between]: [`${convertedDate} 00:00:00`, `${convertedDate} 23:59:59`],\n      },\n    },\n  });\n};\n\nexport default {\n  createTransaction,\n  getAllTransactions,\n  getCreditTransactions,\n  getDebitTransactions,\n  getTransactionsByDate,\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"68dcfc6c4f2aecd5f64b509e6d8ef03518ce2ca4"},"/app_backend/src/database/models/Transaction.ts":{"path":"/app_backend/src/database/models/Transaction.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":20},"end":{"line":3,"column":40}},"2":{"start":{"line":4,"column":11},"end":{"line":4,"column":23}},"3":{"start":{"line":5,"column":18},"end":{"line":5,"column":38}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":35}},"5":{"start":{"line":10,"column":0},"end":{"line":38,"column":3}},"6":{"start":{"line":39,"column":0},"end":{"line":39,"column":104}},"7":{"start":{"line":40,"column":0},"end":{"line":40,"column":106}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"/app_backend/src/database/models/Transaction.ts","sources":["/app_backend/src/database/models/Transaction.ts"],"names":[],"mappings":";;AAAA,yCAA0D;AAC1D,wBAAmB;AACnB,uCAAqC;AAErC,MAAqB,gBAAiB,SAAQ,iBAAK;CAMlD;AAND,mCAMC;AAAA,CAAC;AAEF,gBAAgB,CAAC,IAAI,CAAC;IACpB,EAAE,EAAE;QACF,IAAI,EAAE,mBAAO;QACb,UAAU,EAAE,IAAI;QAChB,aAAa,EAAE,IAAI;QACnB,SAAS,EAAE,KAAK;KACjB;IACD,gBAAgB,EAAE;QAChB,IAAI,EAAE,mBAAO;QACb,SAAS,EAAE,KAAK;KACjB;IACD,iBAAiB,EAAE;QACjB,IAAI,EAAE,mBAAO;QACb,SAAS,EAAE,KAAK;KACjB;IACD,KAAK,EAAE;QACL,IAAI,EAAE,IAAA,mBAAO,EAAC,EAAE,EAAE,CAAC,CAAC;QACpB,SAAS,EAAE,KAAK;KACjB;IACD,SAAS,EAAE;QACT,IAAI,EAAE,gBAAI;QACV,SAAS,EAAE,KAAK;KACjB;CACF,EAAE;IACD,SAAS,EAAE,UAAE;IACb,SAAS,EAAE,aAAa;IACxB,SAAS,EAAE,cAAc;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC,CAAC;AAEH,gBAAgB,CAAC,SAAS,CAAC,iBAAY,EAAE,EAAE,UAAU,EAAE,kBAAkB,EAAE,EAAE,EAAE,gBAAgB,EAAE,CAAC,CAAC;AACnG,gBAAgB,CAAC,SAAS,CAAC,iBAAY,EAAE,EAAE,UAAU,EAAE,mBAAmB,EAAE,EAAE,EAAE,iBAAiB,EAAE,CAAC,CAAC","sourcesContent":["import { Model, INTEGER, DECIMAL, DATE } from 'sequelize';\nimport db from '.';\nimport AccountModel from './Account';\n\nexport default class TransactionModel extends Model {\n  id!: number;\n  debitedAccountId: number;\n  creditedAccountId: number;\n  value: number;\n  createdAt: Date;\n};\n\nTransactionModel.init({\n  id: {\n    type: INTEGER,\n    primaryKey: true,\n    autoIncrement: true,\n    allowNull: false,\n  },\n  debitedAccountId: {\n    type: INTEGER,\n    allowNull: false,\n  },\n  creditedAccountId: {\n    type: INTEGER,\n    allowNull: false,\n  },\n  value: {\n    type: DECIMAL(10, 2),\n    allowNull: false,\n  },\n  createdAt: {\n    type: DATE,\n    allowNull: false,\n  },\n}, {\n  sequelize: db,\n  modelName: 'Transaction',\n  tableName: 'Transactions',\n  timestamps: false,\n});\n\nTransactionModel.belongsTo(AccountModel, { foreignKey: 'debitedAccountId', as: 'debitedAccount' });\nTransactionModel.belongsTo(AccountModel, { foreignKey: 'creditedAccountId', as: 'creditedAccount' });\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b0dcda6deaa3f2b65a669086e376bc256737e445"},"/app_backend/src/helpers/calcTrasaction.ts":{"path":"/app_backend/src/helpers/calcTrasaction.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":32}},"2":{"start":{"line":4,"column":23},"end":{"line":8,"column":1}},"3":{"start":{"line":5,"column":27},"end":{"line":5,"column":59}},"4":{"start":{"line":6,"column":28},"end":{"line":6,"column":61}},"5":{"start":{"line":7,"column":4},"end":{"line":7,"column":47}},"6":{"start":{"line":9,"column":0},"end":{"line":9,"column":40}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":23},"end":{"line":4,"column":24}},"loc":{"start":{"line":4,"column":61},"end":{"line":8,"column":1}},"line":4}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":0,"4":0,"5":0,"6":1},"f":{"0":0},"b":{},"inputSourceMap":{"version":3,"file":"/app_backend/src/helpers/calcTrasaction.ts","sources":["/app_backend/src/helpers/calcTrasaction.ts"],"names":[],"mappings":";;;AAAO,MAAM,cAAc,GAAG,CAAC,KAAa,EAAE,WAAmB,EAAE,YAAoB,EAAE,EAAE;IACzF,MAAM,cAAc,GAAG,CAAC,WAAW,GAAG,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IACxD,MAAM,eAAe,GAAG,CAAC,YAAY,GAAG,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IAE1D,OAAO,EAAE,cAAc,EAAE,eAAe,EAAE,CAAC;AAC7C,CAAC,CAAC;AALW,QAAA,cAAc,kBAKzB","sourcesContent":["export const calcOfTransfer = (value: number, amountDebit: number, amountCredit: number) => {\n  const newAmountDebit = (amountDebit - value).toFixed(2);\n  const newAmountCredit = (amountCredit + value).toFixed(2);\n\n  return { newAmountDebit, newAmountCredit };\n};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"52133e53d487e61feeed0debd3ac6a38f8cb0536"},"/app_backend/src/helpers/formatDate.ts":{"path":"/app_backend/src/helpers/formatDate.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":28}},"2":{"start":{"line":4,"column":19},"end":{"line":15,"column":1}},"3":{"start":{"line":5,"column":31},"end":{"line":5,"column":46}},"4":{"start":{"line":6,"column":4},"end":{"line":7,"column":20}},"5":{"start":{"line":7,"column":8},"end":{"line":7,"column":20}},"6":{"start":{"line":8,"column":4},"end":{"line":13,"column":5}},"7":{"start":{"line":9,"column":35},"end":{"line":9,"column":50}},"8":{"start":{"line":10,"column":8},"end":{"line":11,"column":24}},"9":{"start":{"line":11,"column":12},"end":{"line":11,"column":24}},"10":{"start":{"line":12,"column":8},"end":{"line":12,"column":41}},"11":{"start":{"line":14,"column":4},"end":{"line":14,"column":37}},"12":{"start":{"line":16,"column":0},"end":{"line":16,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":19},"end":{"line":4,"column":20}},"loc":{"start":{"line":4,"column":29},"end":{"line":15,"column":1}},"line":4}},"branchMap":{"0":{"loc":{"start":{"line":6,"column":4},"end":{"line":7,"column":20}},"type":"if","locations":[{"start":{"line":6,"column":4},"end":{"line":7,"column":20}},{"start":{"line":6,"column":4},"end":{"line":7,"column":20}}],"line":6},"1":{"loc":{"start":{"line":8,"column":4},"end":{"line":13,"column":5}},"type":"if","locations":[{"start":{"line":8,"column":4},"end":{"line":13,"column":5}},{"start":{"line":8,"column":4},"end":{"line":13,"column":5}}],"line":8},"2":{"loc":{"start":{"line":10,"column":8},"end":{"line":11,"column":24}},"type":"if","locations":[{"start":{"line":10,"column":8},"end":{"line":11,"column":24}},{"start":{"line":10,"column":8},"end":{"line":11,"column":24}}],"line":10}},"s":{"0":1,"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1},"f":{"0":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0]},"inputSourceMap":{"version":3,"file":"/app_backend/src/helpers/formatDate.ts","sources":["/app_backend/src/helpers/formatDate.ts"],"names":[],"mappings":";;;AAAO,MAAM,UAAU,GAAG,CAAC,IAAY,EAAU,EAAE;IACjD,MAAM,CAAC,GAAG,EAAE,KAAK,EAAE,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAC3C,IAAI,GAAG,CAAC,MAAM,KAAK,CAAC;QAAE,OAAO,IAAI,CAAA;IAEjC,IAAI,IAAI,KAAK,SAAS,EAAE;QACtB,MAAM,CAAC,GAAG,EAAE,KAAK,EAAE,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC3C,IAAI,GAAG,CAAC,MAAM,KAAK,CAAC;YAAE,OAAO,IAAI,CAAA;QACjC,OAAO,GAAG,IAAI,IAAI,KAAK,IAAI,GAAG,EAAE,CAAC;KAClC;IAED,OAAO,GAAG,IAAI,IAAI,KAAK,IAAI,GAAG,EAAE,CAAC;AACnC,CAAC,CAAA;AAXY,QAAA,UAAU,cAWtB","sourcesContent":["export const formatDate = (date: string): string => {\n  const [day, month, year] = date.split('-');\n  if (day.length === 4) return date\n\n  if (year === undefined) {\n    const [day, month, year] = date.split('/');\n    if (day.length === 4) return date\n    return `${year}-${month}-${day}`;\n  }\n\n  return `${year}-${month}-${day}`;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"2218f14c5e50875eb9acbbc57bf529e8aa451b33"}}